apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply from: '../dependencies.gradle'

android {
    
    compileSdkVersion 29

    defaultConfig {
        applicationId "com.airy.v2plus"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            def keyFile = file("../release.keystore")
            keyAlias "release"
            keyPassword "release"
            storeFile keyFile
            storePassword "release"
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            applicationIdSuffix ".debug"
            versionNameSuffix '.debug'
            manifestPlaceholders = [
                    APP_NAME: "@string/app_name_debug",
            ]
        }
        release {
            shrinkResources true
            minifyEnabled true
            manifestPlaceholders = [
                    APP_NAME: "@string/app_name",
            ]
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    buildFeatures {
        dataBinding = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "v2_plus_${variant.buildType.name}_${defaultConfig.versionName}_${releaseTime()}.apk"
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    // android x and android base library
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    // network
    implementation 'com.squareup.okhttp3:okhttp:4.1.0'
    implementation 'com.squareup.retrofit2:retrofit:2.6.1'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.1.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.6.1'
    // lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime:$versions.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycleVersion"
    testImplementation "androidx.arch.core:core-testing:$versions.archCompomentVersion"
    // room
    implementation "androidx.room:room-runtime:$versions.roomVersion"
    kapt "androidx.room:room-compiler:$versions.roomVersion"
    implementation "androidx.room:room-ktx:$versions.roomVersion"
    testImplementation "androidx.room:room-testing:$versions.roomVersion"
    // paging
    def paging_version = "2.1.2"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    testImplementation "androidx.paging:paging-common-ktx:$paging_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.3.0-beta01'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0-beta01'
    implementation 'com.google.android.material:material:1.2.0-alpha06'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.6.1'
    // dagger2
    implementation 'com.google.dagger:dagger:2.27'
    kapt 'com.google.dagger:dagger-compiler:2.21'
    // eventbus
    implementation 'org.greenrobot:eventbus:3.1.1'
    // json
    implementation 'com.alibaba:fastjson:1.2.57'
    // jsoup
    implementation 'org.jsoup:jsoup:1.12.1'
    // glide
    implementation ("com.github.bumptech.glide:glide:$versions.glideVersion") {
        exclude group: "com.android.support"
    }
    implementation ("com.github.bumptech.glide:recyclerview-integration:$versions.glideVersion") {
        // Excludes the support library because it's already included by Glide.
        transitive = false
    }
    implementation "com.github.bumptech.glide:okhttp3-integration:$versions.glideVersion"
    kapt "com.github.bumptech.glide:compiler:$versions.glideVersion"
    implementation 'de.hdodenhof:circleimageview:3.0.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.2.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.2.2'
    // preference
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    // kotlinx-coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.6'
    // ui component
//    implementation 'com.facebook.shimmer:shimmer:0.5.0'
    //    implementation "com.github.skydoves:rainbow:1.0.1"
}

static def releaseTime() {
    return new Date().format("yyyyMMddhhmmss", TimeZone.getTimeZone("UTC"))
}
